name: Build Test

on: [pull_request]

jobs:
  # release:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [macos-latest]

  build_on_mac_x64:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Reconfigure Git to use HTTPS authentication
        uses: GuillaumeFalourd/SSH-to-HTTPS@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 14.15

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build-prod

  # build_on_mac_arm64:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false

  #     - name: Reconfigure Git to use HTTPS authentication
  #       uses: GuillaumeFalourd/SSH-to-HTTPS@v1

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 14.15

  #     - name: Install Dependencies
  #       run: npm install --legacy-peer-deps

  #     - name: Build
  #       run: npm run build-prod

  #     - name: Package
  #       run: npm run electron-mac-arm64-package

  #     - name: Zip
  #       uses: thedoctor0/zip-release@main
  #       id: create_release
  #       with:
  #         type: 'zip'
  #         path: './idn-admin-console-darwin-arm64'
  #         filename: 'idn-admin-console-darwin-arm64.zip'
  #         exclusions: '*.git* /*node_modules/* .editorconfig /idn-admin-console-darwin-arm64/version'

  #     - name: Upload to Release
  #       uses: svenstaro/upload-release-action@v2
  #       with:
  #         file: idn-admin-console-darwin-arm64.zip

  build_on_win_x64:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Reconfigure Git to use HTTPS authentication
        uses: GuillaumeFalourd/SSH-to-HTTPS@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 14.15

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build-prod

  build_on_linux_x64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Reconfigure Git to use HTTPS authentication
        uses: GuillaumeFalourd/SSH-to-HTTPS@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 14.15

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build-prod
      # - name: release
      #   uses: actions/create-release@v1
      #   id: create_release
      #   with:
      #     draft: false
      #     prerelease: false
      #     tag_name: ${{ github.ref }}
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      # - name: upload darwin artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./bin/idn-admin-console-darwin-arm64.tar.gz
      #     asset_name: idn-admin-console-darwin-arm64.tar.gz
      #     asset_content_type: application/gzip

      # - name: upload darwin artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: ./idn-admin-console-darwin-x64.zip

      # - name: Upload Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "idn-admin-console-darwin-x64.zip"
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release
      #   uses: softprops/action-gh-release@v1

      # - name: Build/release Electron app
      #   uses: samuelmeuli/action-build-proder@v1
      #   with:
      #     # GitHub token, automatically provided to the action
      #     # (No need to define this secret in the repo settings)
      #     github_token: ${{ secrets.github_token }}

      #     # If the commit is tagged with a version (e.g. "v1.0.0"),
      #     # release the app after building
      #     release: ${{ startsWith(github.ref, 'refs/tags/v') }}
